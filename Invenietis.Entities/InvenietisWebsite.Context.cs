//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Invenietis.Entities
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class InvenietisWebsite : DbContext
    {
        public InvenietisWebsite()
            : base("name=InvenietisWebsite")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<tLCID> tLCIDs { get; set; }
        public virtual DbSet<tRes> tRes1 { get; set; }
        public virtual DbSet<tResHtml> tResHtmls { get; set; }
        public virtual DbSet<tResString> tResStrings { get; set; }
        public virtual DbSet<tResText> tResTexts { get; set; }
        public virtual DbSet<tXLCID> tXLCIDs { get; set; }
        public virtual DbSet<tXLCIDMap> tXLCIDMaps { get; set; }
        public virtual DbSet<tLearning> tLearnings { get; set; }
        public virtual DbSet<tLearningCategory> tLearningCategories { get; set; }
        public virtual DbSet<tProject> tProjects { get; set; }
        public virtual DbSet<tProjectCategory> tProjectCategories { get; set; }
        public virtual DbSet<vLCID> vLCIDs { get; set; }
        public virtual DbSet<vRes> vRes1 { get; set; }
        public virtual DbSet<vRes_AllChildren> vRes_AllChildren { get; set; }
        public virtual DbSet<vRes_DirectChildren> vRes_DirectChildren { get; set; }
        public virtual DbSet<vRes_ParentPrefixes> vRes_ParentPrefixes { get; set; }
        public virtual DbSet<vResHtml> vResHtmls { get; set; }
        public virtual DbSet<vResString> vResStrings { get; set; }
        public virtual DbSet<vResText> vResTexts { get; set; }
        public virtual DbSet<vXLCID> vXLCIDs { get; set; }
        public virtual DbSet<vXLCIDResHtml> vXLCIDResHtmls { get; set; }
        public virtual DbSet<vXLCIDResString> vXLCIDResStrings { get; set; }
        public virtual DbSet<vXLCIDResText> vXLCIDResTexts { get; set; }
    
        [DbFunction("InvenietisWebsite", "fResNamePrefixes")]
        public virtual IQueryable<fResNamePrefixes_Result> fResNamePrefixes(string resName)
        {
            var resNameParameter = resName != null ?
                new ObjectParameter("ResName", resName) :
                new ObjectParameter("ResName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fResNamePrefixes_Result>("[InvenietisWebsite].[fResNamePrefixes](@ResName)", resNameParameter);
        }
    
        public virtual int sResAssume(string resName, ObjectParameter resIdResult)
        {
            var resNameParameter = resName != null ?
                new ObjectParameter("ResName", resName) :
                new ObjectParameter("ResName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sResAssume", resNameParameter, resIdResult);
        }
    
        public virtual int sResCreate(string resName, ObjectParameter resIdResult)
        {
            var resNameParameter = resName != null ?
                new ObjectParameter("ResName", resName) :
                new ObjectParameter("ResName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sResCreate", resNameParameter, resIdResult);
        }
    
        public virtual int sResCreateAuto(string prefix, ObjectParameter resIdResult)
        {
            var prefixParameter = prefix != null ?
                new ObjectParameter("Prefix", prefix) :
                new ObjectParameter("Prefix", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sResCreateAuto", prefixParameter, resIdResult);
        }
    
        public virtual int sResDestroy(Nullable<int> resId)
        {
            var resIdParameter = resId.HasValue ?
                new ObjectParameter("ResId", resId) :
                new ObjectParameter("ResId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sResDestroy", resIdParameter);
        }
    
        public virtual int sResDestroyByPrefix(string resNamePrefix)
        {
            var resNamePrefixParameter = resNamePrefix != null ?
                new ObjectParameter("ResNamePrefix", resNamePrefix) :
                new ObjectParameter("ResNamePrefix", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sResDestroyByPrefix", resNamePrefixParameter);
        }
    
        public virtual int sResDestroyChildren(Nullable<int> resId)
        {
            var resIdParameter = resId.HasValue ?
                new ObjectParameter("ResId", resId) :
                new ObjectParameter("ResId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sResDestroyChildren", resIdParameter);
        }
    
        public virtual int sResDestroyWithChildren(Nullable<int> resId)
        {
            var resIdParameter = resId.HasValue ?
                new ObjectParameter("ResId", resId) :
                new ObjectParameter("ResId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sResDestroyWithChildren", resIdParameter);
        }
    
        public virtual int sResHtmlAssume(string resName, Nullable<short> lCID, string value, ObjectParameter resIdResult)
        {
            var resNameParameter = resName != null ?
                new ObjectParameter("ResName", resName) :
                new ObjectParameter("ResName", typeof(string));
    
            var lCIDParameter = lCID.HasValue ?
                new ObjectParameter("LCID", lCID) :
                new ObjectParameter("LCID", typeof(short));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sResHtmlAssume", resNameParameter, lCIDParameter, valueParameter, resIdResult);
        }
    
        public virtual int sResHtmlRemove(Nullable<int> resId, Nullable<short> lCID)
        {
            var resIdParameter = resId.HasValue ?
                new ObjectParameter("ResId", resId) :
                new ObjectParameter("ResId", typeof(int));
    
            var lCIDParameter = lCID.HasValue ?
                new ObjectParameter("LCID", lCID) :
                new ObjectParameter("LCID", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sResHtmlRemove", resIdParameter, lCIDParameter);
        }
    
        public virtual int sResHtmlSet(Nullable<int> resId, Nullable<short> lCID, string value)
        {
            var resIdParameter = resId.HasValue ?
                new ObjectParameter("ResId", resId) :
                new ObjectParameter("ResId", typeof(int));
    
            var lCIDParameter = lCID.HasValue ?
                new ObjectParameter("LCID", lCID) :
                new ObjectParameter("LCID", typeof(short));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sResHtmlSet", resIdParameter, lCIDParameter, valueParameter);
        }
    
        public virtual int sResRename(Nullable<int> resId, string newName, Nullable<bool> withChildren)
        {
            var resIdParameter = resId.HasValue ?
                new ObjectParameter("ResId", resId) :
                new ObjectParameter("ResId", typeof(int));
    
            var newNameParameter = newName != null ?
                new ObjectParameter("NewName", newName) :
                new ObjectParameter("NewName", typeof(string));
    
            var withChildrenParameter = withChildren.HasValue ?
                new ObjectParameter("WithChildren", withChildren) :
                new ObjectParameter("WithChildren", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sResRename", resIdParameter, newNameParameter, withChildrenParameter);
        }
    
        public virtual int sResStringAssume(string resName, Nullable<short> lCID, string value, ObjectParameter resIdResult)
        {
            var resNameParameter = resName != null ?
                new ObjectParameter("ResName", resName) :
                new ObjectParameter("ResName", typeof(string));
    
            var lCIDParameter = lCID.HasValue ?
                new ObjectParameter("LCID", lCID) :
                new ObjectParameter("LCID", typeof(short));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sResStringAssume", resNameParameter, lCIDParameter, valueParameter, resIdResult);
        }
    
        public virtual int sResStringRemove(Nullable<int> resId, Nullable<short> lCID)
        {
            var resIdParameter = resId.HasValue ?
                new ObjectParameter("ResId", resId) :
                new ObjectParameter("ResId", typeof(int));
    
            var lCIDParameter = lCID.HasValue ?
                new ObjectParameter("LCID", lCID) :
                new ObjectParameter("LCID", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sResStringRemove", resIdParameter, lCIDParameter);
        }
    
        public virtual int sResStringSet(Nullable<int> resId, Nullable<short> lCID, string value)
        {
            var resIdParameter = resId.HasValue ?
                new ObjectParameter("ResId", resId) :
                new ObjectParameter("ResId", typeof(int));
    
            var lCIDParameter = lCID.HasValue ?
                new ObjectParameter("LCID", lCID) :
                new ObjectParameter("LCID", typeof(short));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sResStringSet", resIdParameter, lCIDParameter, valueParameter);
        }
    
        public virtual int sResTextAssume(string resName, Nullable<short> lCID, string value, ObjectParameter resIdResult)
        {
            var resNameParameter = resName != null ?
                new ObjectParameter("ResName", resName) :
                new ObjectParameter("ResName", typeof(string));
    
            var lCIDParameter = lCID.HasValue ?
                new ObjectParameter("LCID", lCID) :
                new ObjectParameter("LCID", typeof(short));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sResTextAssume", resNameParameter, lCIDParameter, valueParameter, resIdResult);
        }
    
        public virtual int sResTextRemove(Nullable<int> resId, Nullable<short> lCID)
        {
            var resIdParameter = resId.HasValue ?
                new ObjectParameter("ResId", resId) :
                new ObjectParameter("ResId", typeof(int));
    
            var lCIDParameter = lCID.HasValue ?
                new ObjectParameter("LCID", lCID) :
                new ObjectParameter("LCID", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sResTextRemove", resIdParameter, lCIDParameter);
        }
    
        public virtual int sResTextSet(Nullable<int> resId, Nullable<short> lCID, string value)
        {
            var resIdParameter = resId.HasValue ?
                new ObjectParameter("ResId", resId) :
                new ObjectParameter("ResId", typeof(int));
    
            var lCIDParameter = lCID.HasValue ?
                new ObjectParameter("LCID", lCID) :
                new ObjectParameter("LCID", typeof(short));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sResTextSet", resIdParameter, lCIDParameter, valueParameter);
        }
    }
}
