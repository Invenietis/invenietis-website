<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CK.ActivityMonitor.StandardSender</name>
    </assembly>
    <members>
        <member name="T:CK.Core.ActivityMonitorExtension">
            <summary>
            Provides OpenXXX and XXX (Trace, Info,...Fatal) extension methods for <see cref="T:CK.Core.IActivityMonitor"/>.
            </summary>
            <summary>
            Provides extension methods for <see cref="T:CK.Core.IActivityMonitor"/> and other types from the Activity monitor framework.
            </summary>
        </member>
        <member name="M:CK.Core.ActivityMonitorExtension.Trace(CK.Core.IActivityMonitor,System.Int32,System.String)">
            <summary>
            Filters <see cref="F:CK.Core.LogLevel.Trace"/> logs. FileName end LineNumber may be also used to determine whether
            the log should eventually be emitted.
            </summary>
            <param name="this">This <see cref="T:CK.Core.IActivityMonitor"/>.</param>
            <param name="lineNumber">Line number in the source file (automatically injected by C# compiler).</param>
            <param name="fileName">Source file name of the emitter (automatically injected by C# compiler).</param>
            <returns>A <see cref="T:CK.Core.ActivityMonitorLineSender"/> or null if the log must not be emitted.</returns>
        </member>
        <member name="M:CK.Core.ActivityMonitorExtension.OpenTrace(CK.Core.IActivityMonitor,System.Int32,System.String)">
            <summary>
            Filtered <see cref="F:CK.Core.LogLevel.Trace"/> group opening. FileName end LineNumber may be also used to determine whether
            the log should eventually be emitted.
            </summary>
            <param name="this">This <see cref="T:CK.Core.IActivityMonitor"/>.</param>
            <param name="lineNumber">Line number in the source file (automatically injected by C# compiler).</param>
            <param name="fileName">Source file name of the emitter (automatically injected by C# compiler).</param>
            <returns>A <see cref="T:CK.Core.ActivityMonitorGroupSender"/> or null if the group must not be emitted.</returns>
        </member>
        <member name="M:CK.Core.ActivityMonitorExtension.Info(CK.Core.IActivityMonitor,System.Int32,System.String)">
            <summary>
            Filters <see cref="F:CK.Core.LogLevel.Info"/> logs. FileName end LineNumber may be also used to determine whether
            the log should eventually be emitted.
            </summary>
            <param name="this">This <see cref="T:CK.Core.IActivityMonitor"/>.</param>
            <param name="lineNumber">Line number in the source file (automatically injected by C# compiler).</param>
            <param name="fileName">Source file name of the emitter (automatically injected by C# compiler).</param>
            <returns>A <see cref="T:CK.Core.ActivityMonitorLineSender"/> or null if the log must not be emitted.</returns>
        </member>
        <member name="M:CK.Core.ActivityMonitorExtension.OpenInfo(CK.Core.IActivityMonitor,System.Int32,System.String)">
            <summary>
            Filtered <see cref="F:CK.Core.LogLevel.Info"/> group opening. FileName end LineNumber may be also used to determine whether
            the log should eventually be emitted.
            </summary>
            <param name="this">This <see cref="T:CK.Core.IActivityMonitor"/>.</param>
            <param name="lineNumber">Line number in the source file (automatically injected by C# compiler).</param>
            <param name="fileName">Source file name of the emitter (automatically injected by C# compiler).</param>
            <returns>A <see cref="T:CK.Core.ActivityMonitorGroupSender"/> or null if the group must not be emitted.</returns>
        </member>
        <member name="M:CK.Core.ActivityMonitorExtension.Warn(CK.Core.IActivityMonitor,System.Int32,System.String)">
            <summary>
            Filters <see cref="F:CK.Core.LogLevel.Warn"/> logs. FileName end LineNumber may be also used to determine whether
            the log should eventually be emitted.
            </summary>
            <param name="this">This <see cref="T:CK.Core.IActivityMonitor"/>.</param>
            <param name="lineNumber">Line number in the source file (automatically injected by C# compiler).</param>
            <param name="fileName">Source file name of the emitter (automatically injected by C# compiler).</param>
            <returns>A <see cref="T:CK.Core.ActivityMonitorLineSender"/> or null if the log must not be emitted.</returns>
        </member>
        <member name="M:CK.Core.ActivityMonitorExtension.OpenWarn(CK.Core.IActivityMonitor,System.Int32,System.String)">
            <summary>
            Filtered <see cref="F:CK.Core.LogLevel.Warn"/> group opening. FileName end LineNumber may be also used to determine whether
            the log should eventually be emitted.
            </summary>
            <param name="this">This <see cref="T:CK.Core.IActivityMonitor"/>.</param>
            <param name="lineNumber">Line number in the source file (automatically injected by C# compiler).</param>
            <param name="fileName">Source file name of the emitter (automatically injected by C# compiler).</param>
            <returns>A <see cref="T:CK.Core.ActivityMonitorGroupSender"/> or null if the group must not be emitted.</returns>
        </member>
        <member name="M:CK.Core.ActivityMonitorExtension.Error(CK.Core.IActivityMonitor,System.Int32,System.String)">
            <summary>
            Filters <see cref="F:CK.Core.LogLevel.Error"/> logs. FileName end LineNumber may be also used to determine whether
            the log should eventually be emitted.
            </summary>
            <param name="this">This <see cref="T:CK.Core.IActivityMonitor"/>.</param>
            <param name="lineNumber">Line number in the source file (automatically injected by C# compiler).</param>
            <param name="fileName">Source file name of the emitter (automatically injected by C# compiler).</param>
            <returns>A <see cref="T:CK.Core.ActivityMonitorLineSender"/> or null if the log must not be emitted.</returns>
        </member>
        <member name="M:CK.Core.ActivityMonitorExtension.OpenError(CK.Core.IActivityMonitor,System.Int32,System.String)">
            <summary>
            Filtered <see cref="F:CK.Core.LogLevel.Error"/> group opening. FileName end LineNumber may be also used to determine whether
            the log should eventually be emitted.
            </summary>
            <param name="this">This <see cref="T:CK.Core.IActivityMonitor"/>.</param>
            <param name="lineNumber">Line number in the source file (automatically injected by C# compiler).</param>
            <param name="fileName">Source file name of the emitter (automatically injected by C# compiler).</param>
            <returns>A <see cref="T:CK.Core.ActivityMonitorGroupSender"/> or null if the group must not be emitted.</returns>
        </member>
        <member name="M:CK.Core.ActivityMonitorExtension.Fatal(CK.Core.IActivityMonitor,System.Int32,System.String)">
            <summary>
            Filters <see cref="F:CK.Core.LogLevel.Fatal"/> logs. FileName end LineNumber may be also used to determine whether
            the log should eventually be emitted.
            </summary>
            <param name="this">This <see cref="T:CK.Core.IActivityMonitor"/>.</param>
            <param name="lineNumber">Line number in the source file (automatically injected by C# compiler).</param>
            <param name="fileName">Source file name of the emitter (automatically injected by C# compiler).</param>
            <returns>A <see cref="T:CK.Core.ActivityMonitorLineSender"/> or null if the log must not be emitted.</returns>
        </member>
        <member name="M:CK.Core.ActivityMonitorExtension.OpenFatal(CK.Core.IActivityMonitor,System.Int32,System.String)">
            <summary>
            Filtered <see cref="F:CK.Core.LogLevel.Fatal"/> group opening. FileName end LineNumber may be also used to determine whether
            the log should eventually be emitted.
            </summary>
            <param name="this">This <see cref="T:CK.Core.IActivityMonitor"/>.</param>
            <param name="lineNumber">Line number in the source file (automatically injected by C# compiler).</param>
            <param name="fileName">Source file name of the emitter (automatically injected by C# compiler).</param>
            <returns>A <see cref="T:CK.Core.ActivityMonitorGroupSender"/> or null if the group must not be emitted.</returns>
        </member>
        <member name="M:CK.Core.ActivityMonitorExtension.FilterLogLine(CK.Core.IActivityMonitor,CK.Core.LogLevel,System.String,System.Int32)">
            <summary>
            Private method used by XXX (Trace, Info,..., Fatal) extension methods.
            </summary>
        </member>
        <member name="M:CK.Core.ActivityMonitorExtension.FilteredGroup(CK.Core.IActivityMonitor,CK.Core.LogLevel,System.String,System.Int32)">
            <summary>
            Private method used by OpenXXX (Trace, Info,..., Fatal) extension methods.
            </summary>
        </member>
        <member name="T:CK.Core.ActivityMonitorSendExtension">
            <summary>
            Provides Send extension methods for <see cref="T:CK.Core.IActivityMonitorGroupSender"/>.
            </summary>
            <summary>
            Provides Send extension methods for <see cref="T:CK.Core.IActivityMonitorLineSender"/> and <see cref="T:CK.Core.ActivityMonitorGroupSender"/>.
            </summary>
        </member>
        <member name="M:CK.Core.ActivityMonitorSendExtension.Send(CK.Core.IActivityMonitorGroupSender,System.String)">
            <summary>
            Sends a text.
            </summary>
            <param name="this">This <see cref="T:CK.Core.IActivityMonitorGroupSender"/> object.</param>
            <param name="text">The text of the log.</param>
        </member>
        <member name="M:CK.Core.ActivityMonitorSendExtension.Send(CK.Core.IActivityMonitorGroupSender,System.String,System.Object)">
            <summary>
            Sends a formatted text.
            </summary>
            <param name="this">This <see cref="T:CK.Core.IActivityMonitorGroupSender"/> object.</param>
            <param name="format">The text format of the log with 1 placeholders.</param>
            <param name="arg0">Parameter to format (placeholder {0}).</param>
        </member>
        <member name="M:CK.Core.ActivityMonitorSendExtension.Send(CK.Core.IActivityMonitorGroupSender,System.String,System.Object,System.Object)">
            <summary>
            Sends a formatted text.
            </summary>
            <param name="this">This <see cref="T:CK.Core.IActivityMonitorGroupSender"/> object.</param>
            <param name="format">The text format of the log with 2 placeholders.</param>
            <param name="arg0">Parameter to format (placeholder {0}).</param>
            <param name="arg1">Parameter to format (placeholder {1}).</param>
        </member>
        <member name="M:CK.Core.ActivityMonitorSendExtension.Send(CK.Core.IActivityMonitorGroupSender,System.String,System.Object,System.Object,System.Object)">
            <summary>
            Sends a formatted text.
            </summary>
            <param name="this">This <see cref="T:CK.Core.IActivityMonitorGroupSender"/> object.</param>
            <param name="format">The text format of the log with 3 placeholders.</param>
            <param name="arg0">Parameter to format (placeholder {0}).</param>
            <param name="arg1">Parameter to format (placeholder {1}).</param>
            <param name="arg2">Parameter to format (placeholder {2}).</param>
        </member>
        <member name="M:CK.Core.ActivityMonitorSendExtension.Send(CK.Core.IActivityMonitorGroupSender,System.String,System.Object,System.Object,System.Object,System.Object)">
            <summary>
            Sends a formatted text.
            </summary>
            <param name="this">This <see cref="T:CK.Core.IActivityMonitorGroupSender"/> object.</param>
            <param name="format">The text format of the log with 4 placeholders.</param>
            <param name="arg0">Parameter to format (placeholder {0}).</param>
            <param name="arg1">Parameter to format (placeholder {1}).</param>
            <param name="arg2">Parameter to format (placeholder {2}).</param>
            <param name="arg3">Parameter to format (placeholder {3}).</param>
        </member>
        <member name="M:CK.Core.ActivityMonitorSendExtension.Send(CK.Core.IActivityMonitorGroupSender,System.String,System.Object[])">
            <summary>
            Sends a formatted text.
            </summary>
            <param name="this">This <see cref="T:CK.Core.IActivityMonitorGroupSender"/> object.</param>
            <param name="format">The text format of the log with 5 placeholders.</param>
            <param name="arguments">Multiple parameters to format.</param>
        </member>
        <member name="M:CK.Core.ActivityMonitorSendExtension.Send(CK.Core.IActivityMonitorGroupSender,System.Func{System.String})">
            <summary>
            Sends a text obtained through a delegate.
            The delegate will be called only if the log is not filtered.
            </summary>
            <param name="this">This <see cref="T:CK.Core.IActivityMonitorGroupSender"/> object.</param> 
            <param name="text">Function that returns a string. Must not be null.</param>
        </member>
        <member name="M:CK.Core.ActivityMonitorSendExtension.Send``1(CK.Core.IActivityMonitorGroupSender,System.Func{``0,System.String},``0)">
            <summary>
            Sends a text obtained through a parameterized delegate.
            The delegate will be called only if the log is not filtered.
            </summary>
            <typeparam name="T">Type of the parameter that <paramref name="text"/> accepts.</typeparam>
            <param name="this">This <see cref="T:CK.Core.IActivityMonitorGroupSender"/> object.</param> 
            <param name="text">Function that returns a string. Must not be null.</param>
            <param name="param">Parameter of the <paramref name="text"/> delegate.</param>
        </member>
        <member name="M:CK.Core.ActivityMonitorSendExtension.Send``2(CK.Core.IActivityMonitorGroupSender,System.Func{``0,``1,System.String},``0,``1)">
            <summary>
            Sends a text obtained through a parameterized delegate.
            The delegate will be called only if the log is not filtered.
            </summary>
            <typeparam name="T1">Type of the first parameter that <paramref name="text"/> accepts.</typeparam>
            <typeparam name="T2">Type of the second parameter that <paramref name="text"/> accepts.</typeparam>
            <param name="this">This <see cref="T:CK.Core.IActivityMonitorGroupSender"/> object.</param> 
            <param name="text">Function that returns a string. Must not be null.</param>
            <param name="param1">First parameter for the <paramref name="text"/> delegate.</param>
            <param name="param2">Second parameter for the <paramref name="text"/> delegate.</param>
        </member>
        <member name="M:CK.Core.ActivityMonitorSendExtension.Send``3(CK.Core.IActivityMonitorGroupSender,System.Func{``0,``1,``2,System.String},``0,``1,``2)">
            <summary>
            Sends a log with a text obtained through a parameterized delegate.
            The delegate will be called only if the log is not filtered.
            </summary>
            <typeparam name="T1">Type of the first parameter that <paramref name="text"/> accepts.</typeparam>
            <typeparam name="T2">Type of the second parameter that <paramref name="text"/> accepts.</typeparam>
            <typeparam name="T3">Type of the third parameter that <paramref name="text"/> accepts.</typeparam>
            <param name="this">This <see cref="T:CK.Core.IActivityMonitorGroupSender"/> object.</param> 
            <param name="text">Function that returns a string. Must not be null.</param>
            <param name="param1">First parameter for the <paramref name="text"/> delegate.</param>
            <param name="param2">Second parameter for the <paramref name="text"/> delegate.</param>
            <param name="param3">Third parameter for the <paramref name="text"/> delegate.</param>
        </member>
        <member name="M:CK.Core.ActivityMonitorSendExtension.Send(CK.Core.IActivityMonitorGroupSender,CK.Core.CKTrait,System.String)">
            <summary>
            Sends a text with associated tags.
            </summary>
            <param name="this">This <see cref="T:CK.Core.IActivityMonitorGroupSender"/> object.</param>
            <param name="tags">Tags for the log.</param>
            <param name="text">The text of the log.</param>
        </member>
        <member name="M:CK.Core.ActivityMonitorSendExtension.Send(CK.Core.IActivityMonitorGroupSender,CK.Core.CKTrait,System.String,System.Object)">
            <summary>
            Sends a formatted text with associated tags.
            </summary>
            <param name="this">This <see cref="T:CK.Core.IActivityMonitorGroupSender"/> object.</param>
            <param name="tags">Tags for the log.</param>
            <param name="format">The text format of the log with 1 placeholders.</param>
            <param name="arg0">Parameter to format (placeholder {0}).</param>
        </member>
        <member name="M:CK.Core.ActivityMonitorSendExtension.Send(CK.Core.IActivityMonitorGroupSender,CK.Core.CKTrait,System.String,System.Object,System.Object)">
            <summary>
            Sends a formatted text with associated tags.
            </summary>
            <param name="this">This <see cref="T:CK.Core.IActivityMonitorGroupSender"/> object.</param>
            <param name="tags">Tags for the log.</param>
            <param name="format">The text format of the log with 2 placeholders.</param>
            <param name="arg0">Parameter to format (placeholder {0}).</param>
            <param name="arg1">Parameter to format (placeholder {1}).</param>
        </member>
        <member name="M:CK.Core.ActivityMonitorSendExtension.Send(CK.Core.IActivityMonitorGroupSender,CK.Core.CKTrait,System.String,System.Object,System.Object,System.Object)">
            <summary>
            Sends a formatted text with associated tags.
            </summary>
            <param name="this">This <see cref="T:CK.Core.IActivityMonitorGroupSender"/> object.</param>
            <param name="tags">Tags for the log.</param>
            <param name="format">The text format of the log with 3 placeholders.</param>
            <param name="arg0">Parameter to format (placeholder {0}).</param>
            <param name="arg1">Parameter to format (placeholder {1}).</param>
            <param name="arg2">Parameter to format (placeholder {2}).</param>
        </member>
        <member name="M:CK.Core.ActivityMonitorSendExtension.Send(CK.Core.IActivityMonitorGroupSender,CK.Core.CKTrait,System.String,System.Object,System.Object,System.Object,System.Object)">
            <summary>
            Sends a formatted text with associated tags.
            </summary>
            <param name="this">This <see cref="T:CK.Core.IActivityMonitorGroupSender"/> object.</param>
            <param name="tags">Tags for the log.</param>
            <param name="format">The text format of the log with 4 placeholders.</param>
            <param name="arg0">Parameter to format (placeholder {0}).</param>
            <param name="arg1">Parameter to format (placeholder {1}).</param>
            <param name="arg2">Parameter to format (placeholder {2}).</param>
            <param name="arg3">Parameter to format (placeholder {3}).</param>
        </member>
        <member name="M:CK.Core.ActivityMonitorSendExtension.Send(CK.Core.IActivityMonitorGroupSender,CK.Core.CKTrait,System.String,System.Object[])">
            <summary>
            Sends a formatted text with associated tags.
            </summary>
            <param name="this">This <see cref="T:CK.Core.IActivityMonitorGroupSender"/> object.</param>
            <param name="tags">Tags for the log.</param>
            <param name="format">The text format of the log with 5 placeholders.</param>
            <param name="arguments">Multiple parameters to format.</param>
        </member>
        <member name="M:CK.Core.ActivityMonitorSendExtension.Send(CK.Core.IActivityMonitorGroupSender,CK.Core.CKTrait,System.Func{System.String})">
            <summary>
            Sends a text obtained through a delegate with associated tags.
            The delegate will be called only if the log is not filtered.
            </summary>
            <param name="this">This <see cref="T:CK.Core.IActivityMonitorGroupSender"/> object.</param>
            <param name="tags">Tags for the log.</param> 
            <param name="text">Function that returns a string. Must not be null.</param>
        </member>
        <member name="M:CK.Core.ActivityMonitorSendExtension.Send``1(CK.Core.IActivityMonitorGroupSender,CK.Core.CKTrait,System.Func{``0,System.String},``0)">
            <summary>
            Sends a text obtained through a parameterized delegate with associated tags.
            The delegate will be called only if the log is not filtered.
            </summary>
            <typeparam name="T">Type of the parameter that <paramref name="text"/> accepts.</typeparam>
            <param name="this">This <see cref="T:CK.Core.IActivityMonitorGroupSender"/> object.</param>
            <param name="tags">Tags for the log.</param> 
            <param name="text">Function that returns a string. Must not be null.</param>
            <param name="param">Parameter of the <paramref name="text"/> delegate.</param>
        </member>
        <member name="M:CK.Core.ActivityMonitorSendExtension.Send``2(CK.Core.IActivityMonitorGroupSender,CK.Core.CKTrait,System.Func{``0,``1,System.String},``0,``1)">
            <summary>
            Sends a text obtained through a parameterized delegate with associated tags.
            The delegate will be called only if the log is not filtered.
            </summary>
            <typeparam name="T1">Type of the first parameter that <paramref name="text"/> accepts.</typeparam>
            <typeparam name="T2">Type of the second parameter that <paramref name="text"/> accepts.</typeparam>
            <param name="this">This <see cref="T:CK.Core.IActivityMonitorGroupSender"/> object.</param>
            <param name="tags">Tags for the log.</param> 
            <param name="text">Function that returns a string. Must not be null.</param>
            <param name="param1">First parameter for the <paramref name="text"/> delegate.</param>
            <param name="param2">Second parameter for the <paramref name="text"/> delegate.</param>
        </member>
        <member name="M:CK.Core.ActivityMonitorSendExtension.Send``3(CK.Core.IActivityMonitorGroupSender,CK.Core.CKTrait,System.Func{``0,``1,``2,System.String},``0,``1,``2)">
            <summary>
            Sends a log with a text obtained through a parameterized delegate with associated tags.
            The delegate will be called only if the log is not filtered.
            </summary>
            <typeparam name="T1">Type of the first parameter that <paramref name="text"/> accepts.</typeparam>
            <typeparam name="T2">Type of the second parameter that <paramref name="text"/> accepts.</typeparam>
            <typeparam name="T3">Type of the third parameter that <paramref name="text"/> accepts.</typeparam>
            <param name="this">This <see cref="T:CK.Core.IActivityMonitorGroupSender"/> object.</param>
            <param name="tags">Tags for the log.</param> 
            <param name="text">Function that returns a string. Must not be null.</param>
            <param name="param1">First parameter for the <paramref name="text"/> delegate.</param>
            <param name="param2">Second parameter for the <paramref name="text"/> delegate.</param>
            <param name="param3">Third parameter for the <paramref name="text"/> delegate.</param>
        </member>
        <member name="M:CK.Core.ActivityMonitorSendExtension.Send(CK.Core.IActivityMonitorGroupSender,System.Exception)">
            <summary>
            Sends a log  with an exception.
            </summary>
            <param name="this">This <see cref="T:CK.Core.IActivityMonitorGroupSender"/> object.</param>
            <param name="ex">The exception. Must not be null.</param>
        </member>
        <member name="M:CK.Core.ActivityMonitorSendExtension.Send(CK.Core.IActivityMonitorGroupSender,System.Exception,System.String)">
            <summary>
            Sends a text with an exception.
            </summary>
            <param name="this">This <see cref="T:CK.Core.IActivityMonitorGroupSender"/> object.</param>
            <param name="ex">The exception. Must not be null.</param>
            <param name="text">The text of the log.</param>
        </member>
        <member name="M:CK.Core.ActivityMonitorSendExtension.Send(CK.Core.IActivityMonitorGroupSender,System.Exception,System.String,System.Object)">
            <summary>
            Sends a formatted text with an exception.
            </summary>
            <param name="this">This <see cref="T:CK.Core.IActivityMonitorGroupSender"/> object.</param>
            <param name="ex">The exception. Must not be null.</param>
            <param name="format">The text format of the log with 1 placeholders.</param>
            <param name="arg0">Parameter to format (placeholder {0}).</param>
        </member>
        <member name="M:CK.Core.ActivityMonitorSendExtension.Send(CK.Core.IActivityMonitorGroupSender,System.Exception,System.String,System.Object,System.Object)">
            <summary>
            Sends a formatted text with an exception.
            </summary>
            <param name="this">This <see cref="T:CK.Core.IActivityMonitorGroupSender"/> object.</param>
            <param name="ex">The exception. Must not be null.</param>
            <param name="format">The text format of the log with 2 placeholders.</param>
            <param name="arg0">Parameter to format (placeholder {0}).</param>
            <param name="arg1">Parameter to format (placeholder {1}).</param>
        </member>
        <member name="M:CK.Core.ActivityMonitorSendExtension.Send(CK.Core.IActivityMonitorGroupSender,System.Exception,System.String,System.Object,System.Object,System.Object)">
            <summary>
            Sends a formatted text with an exception.
            </summary>
            <param name="this">This <see cref="T:CK.Core.IActivityMonitorGroupSender"/> object.</param>
            <param name="ex">The exception. Must not be null.</param>
            <param name="format">The text format of the log with 3 placeholders.</param>
            <param name="arg0">Parameter to format (placeholder {0}).</param>
            <param name="arg1">Parameter to format (placeholder {1}).</param>
            <param name="arg2">Parameter to format (placeholder {2}).</param>
        </member>
        <member name="M:CK.Core.ActivityMonitorSendExtension.Send(CK.Core.IActivityMonitorGroupSender,System.Exception,System.String,System.Object,System.Object,System.Object,System.Object)">
            <summary>
            Sends a formatted text with an exception.
            </summary>
            <param name="this">This <see cref="T:CK.Core.IActivityMonitorGroupSender"/> object.</param>
            <param name="ex">The exception. Must not be null.</param>
            <param name="format">The text format of the log with 4 placeholders.</param>
            <param name="arg0">Parameter to format (placeholder {0}).</param>
            <param name="arg1">Parameter to format (placeholder {1}).</param>
            <param name="arg2">Parameter to format (placeholder {2}).</param>
            <param name="arg3">Parameter to format (placeholder {3}).</param>
        </member>
        <member name="M:CK.Core.ActivityMonitorSendExtension.Send(CK.Core.IActivityMonitorGroupSender,System.Exception,System.String,System.Object[])">
            <summary>
            Sends a formatted text with an exception.
            </summary>
            <param name="this">This <see cref="T:CK.Core.IActivityMonitorGroupSender"/> object.</param>
            <param name="ex">The exception. Must not be null.</param>
            <param name="format">The text format of the log with 5 placeholders.</param>
            <param name="arguments">Multiple parameters to format.</param>
        </member>
        <member name="M:CK.Core.ActivityMonitorSendExtension.Send(CK.Core.IActivityMonitorGroupSender,System.Exception,System.Func{System.String})">
            <summary>
            Sends a text obtained through a delegate with an exception.
            The delegate will be called only if the log is not filtered.
            </summary>
            <param name="this">This <see cref="T:CK.Core.IActivityMonitorGroupSender"/> object.</param>
            <param name="ex">The exception. Must not be null.</param> 
            <param name="text">Function that returns a string. Must not be null.</param>
        </member>
        <member name="M:CK.Core.ActivityMonitorSendExtension.Send``1(CK.Core.IActivityMonitorGroupSender,System.Exception,System.Func{``0,System.String},``0)">
            <summary>
            Sends a text obtained through a parameterized delegate with an exception.
            The delegate will be called only if the log is not filtered.
            </summary>
            <typeparam name="T">Type of the parameter that <paramref name="text"/> accepts.</typeparam>
            <param name="this">This <see cref="T:CK.Core.IActivityMonitorGroupSender"/> object.</param>
            <param name="ex">The exception. Must not be null.</param> 
            <param name="text">Function that returns a string. Must not be null.</param>
            <param name="param">Parameter of the <paramref name="text"/> delegate.</param>
        </member>
        <member name="M:CK.Core.ActivityMonitorSendExtension.Send``2(CK.Core.IActivityMonitorGroupSender,System.Exception,System.Func{``0,``1,System.String},``0,``1)">
            <summary>
            Sends a text obtained through a parameterized delegate with an exception.
            The delegate will be called only if the log is not filtered.
            </summary>
            <typeparam name="T1">Type of the first parameter that <paramref name="text"/> accepts.</typeparam>
            <typeparam name="T2">Type of the second parameter that <paramref name="text"/> accepts.</typeparam>
            <param name="this">This <see cref="T:CK.Core.IActivityMonitorGroupSender"/> object.</param>
            <param name="ex">The exception. Must not be null.</param> 
            <param name="text">Function that returns a string. Must not be null.</param>
            <param name="param1">First parameter for the <paramref name="text"/> delegate.</param>
            <param name="param2">Second parameter for the <paramref name="text"/> delegate.</param>
        </member>
        <member name="M:CK.Core.ActivityMonitorSendExtension.Send``3(CK.Core.IActivityMonitorGroupSender,System.Exception,System.Func{``0,``1,``2,System.String},``0,``1,``2)">
            <summary>
            Sends a log with a text obtained through a parameterized delegate with an exception.
            The delegate will be called only if the log is not filtered.
            </summary>
            <typeparam name="T1">Type of the first parameter that <paramref name="text"/> accepts.</typeparam>
            <typeparam name="T2">Type of the second parameter that <paramref name="text"/> accepts.</typeparam>
            <typeparam name="T3">Type of the third parameter that <paramref name="text"/> accepts.</typeparam>
            <param name="this">This <see cref="T:CK.Core.IActivityMonitorGroupSender"/> object.</param>
            <param name="ex">The exception. Must not be null.</param> 
            <param name="text">Function that returns a string. Must not be null.</param>
            <param name="param1">First parameter for the <paramref name="text"/> delegate.</param>
            <param name="param2">Second parameter for the <paramref name="text"/> delegate.</param>
            <param name="param3">Third parameter for the <paramref name="text"/> delegate.</param>
        </member>
        <member name="M:CK.Core.ActivityMonitorSendExtension.Send(CK.Core.IActivityMonitorGroupSender,System.Exception,CK.Core.CKTrait)">
            <summary>
            Sends a log  with an exception and associated tags.
            </summary>
            <param name="this">This <see cref="T:CK.Core.IActivityMonitorGroupSender"/> object.</param>
            <param name="ex">The exception. Must not be null.</param>
            <param name="tags">Tags for the log.</param>
        </member>
        <member name="M:CK.Core.ActivityMonitorSendExtension.Send(CK.Core.IActivityMonitorGroupSender,System.Exception,CK.Core.CKTrait,System.String)">
            <summary>
            Sends a text with an exception and associated tags.
            </summary>
            <param name="this">This <see cref="T:CK.Core.IActivityMonitorGroupSender"/> object.</param>
            <param name="ex">The exception. Must not be null.</param>
            <param name="tags">Tags for the log.</param>
            <param name="text">The text of the log.</param>
        </member>
        <member name="M:CK.Core.ActivityMonitorSendExtension.Send(CK.Core.IActivityMonitorGroupSender,System.Exception,CK.Core.CKTrait,System.String,System.Object)">
            <summary>
            Sends a formatted text with an exception and associated tags.
            </summary>
            <param name="this">This <see cref="T:CK.Core.IActivityMonitorGroupSender"/> object.</param>
            <param name="ex">The exception. Must not be null.</param>
            <param name="tags">Tags for the log.</param>
            <param name="format">The text format of the log with 1 placeholders.</param>
            <param name="arg0">Parameter to format (placeholder {0}).</param>
        </member>
        <member name="M:CK.Core.ActivityMonitorSendExtension.Send(CK.Core.IActivityMonitorGroupSender,System.Exception,CK.Core.CKTrait,System.String,System.Object,System.Object)">
            <summary>
            Sends a formatted text with an exception and associated tags.
            </summary>
            <param name="this">This <see cref="T:CK.Core.IActivityMonitorGroupSender"/> object.</param>
            <param name="ex">The exception. Must not be null.</param>
            <param name="tags">Tags for the log.</param>
            <param name="format">The text format of the log with 2 placeholders.</param>
            <param name="arg0">Parameter to format (placeholder {0}).</param>
            <param name="arg1">Parameter to format (placeholder {1}).</param>
        </member>
        <member name="M:CK.Core.ActivityMonitorSendExtension.Send(CK.Core.IActivityMonitorGroupSender,System.Exception,CK.Core.CKTrait,System.String,System.Object,System.Object,System.Object)">
            <summary>
            Sends a formatted text with an exception and associated tags.
            </summary>
            <param name="this">This <see cref="T:CK.Core.IActivityMonitorGroupSender"/> object.</param>
            <param name="ex">The exception. Must not be null.</param>
            <param name="tags">Tags for the log.</param>
            <param name="format">The text format of the log with 3 placeholders.</param>
            <param name="arg0">Parameter to format (placeholder {0}).</param>
            <param name="arg1">Parameter to format (placeholder {1}).</param>
            <param name="arg2">Parameter to format (placeholder {2}).</param>
        </member>
        <member name="M:CK.Core.ActivityMonitorSendExtension.Send(CK.Core.IActivityMonitorGroupSender,System.Exception,CK.Core.CKTrait,System.String,System.Object,System.Object,System.Object,System.Object)">
            <summary>
            Sends a formatted text with an exception and associated tags.
            </summary>
            <param name="this">This <see cref="T:CK.Core.IActivityMonitorGroupSender"/> object.</param>
            <param name="ex">The exception. Must not be null.</param>
            <param name="tags">Tags for the log.</param>
            <param name="format">The text format of the log with 4 placeholders.</param>
            <param name="arg0">Parameter to format (placeholder {0}).</param>
            <param name="arg1">Parameter to format (placeholder {1}).</param>
            <param name="arg2">Parameter to format (placeholder {2}).</param>
            <param name="arg3">Parameter to format (placeholder {3}).</param>
        </member>
        <member name="M:CK.Core.ActivityMonitorSendExtension.Send(CK.Core.IActivityMonitorGroupSender,System.Exception,CK.Core.CKTrait,System.String,System.Object[])">
            <summary>
            Sends a formatted text with an exception and associated tags.
            </summary>
            <param name="this">This <see cref="T:CK.Core.IActivityMonitorGroupSender"/> object.</param>
            <param name="ex">The exception. Must not be null.</param>
            <param name="tags">Tags for the log.</param>
            <param name="format">The text format of the log with 5 placeholders.</param>
            <param name="arguments">Multiple parameters to format.</param>
        </member>
        <member name="M:CK.Core.ActivityMonitorSendExtension.Send(CK.Core.IActivityMonitorGroupSender,System.Exception,CK.Core.CKTrait,System.Func{System.String})">
            <summary>
            Sends a text obtained through a delegate with an exception and associated tags.
            The delegate will be called only if the log is not filtered.
            </summary>
            <param name="this">This <see cref="T:CK.Core.IActivityMonitorGroupSender"/> object.</param>
            <param name="ex">The exception. Must not be null.</param>
            <param name="tags">Tags for the log.</param> 
            <param name="text">Function that returns a string. Must not be null.</param>
        </member>
        <member name="M:CK.Core.ActivityMonitorSendExtension.Send``1(CK.Core.IActivityMonitorGroupSender,System.Exception,CK.Core.CKTrait,System.Func{``0,System.String},``0)">
            <summary>
            Sends a text obtained through a parameterized delegate with an exception and associated tags.
            The delegate will be called only if the log is not filtered.
            </summary>
            <typeparam name="T">Type of the parameter that <paramref name="text"/> accepts.</typeparam>
            <param name="this">This <see cref="T:CK.Core.IActivityMonitorGroupSender"/> object.</param>
            <param name="ex">The exception. Must not be null.</param>
            <param name="tags">Tags for the log.</param> 
            <param name="text">Function that returns a string. Must not be null.</param>
            <param name="param">Parameter of the <paramref name="text"/> delegate.</param>
        </member>
        <member name="M:CK.Core.ActivityMonitorSendExtension.Send``2(CK.Core.IActivityMonitorGroupSender,System.Exception,CK.Core.CKTrait,System.Func{``0,``1,System.String},``0,``1)">
            <summary>
            Sends a text obtained through a parameterized delegate with an exception and associated tags.
            The delegate will be called only if the log is not filtered.
            </summary>
            <typeparam name="T1">Type of the first parameter that <paramref name="text"/> accepts.</typeparam>
            <typeparam name="T2">Type of the second parameter that <paramref name="text"/> accepts.</typeparam>
            <param name="this">This <see cref="T:CK.Core.IActivityMonitorGroupSender"/> object.</param>
            <param name="ex">The exception. Must not be null.</param>
            <param name="tags">Tags for the log.</param> 
            <param name="text">Function that returns a string. Must not be null.</param>
            <param name="param1">First parameter for the <paramref name="text"/> delegate.</param>
            <param name="param2">Second parameter for the <paramref name="text"/> delegate.</param>
        </member>
        <member name="M:CK.Core.ActivityMonitorSendExtension.Send``3(CK.Core.IActivityMonitorGroupSender,System.Exception,CK.Core.CKTrait,System.Func{``0,``1,``2,System.String},``0,``1,``2)">
            <summary>
            Sends a log with a text obtained through a parameterized delegate with an exception and associated tags.
            The delegate will be called only if the log is not filtered.
            </summary>
            <typeparam name="T1">Type of the first parameter that <paramref name="text"/> accepts.</typeparam>
            <typeparam name="T2">Type of the second parameter that <paramref name="text"/> accepts.</typeparam>
            <typeparam name="T3">Type of the third parameter that <paramref name="text"/> accepts.</typeparam>
            <param name="this">This <see cref="T:CK.Core.IActivityMonitorGroupSender"/> object.</param>
            <param name="ex">The exception. Must not be null.</param>
            <param name="tags">Tags for the log.</param> 
            <param name="text">Function that returns a string. Must not be null.</param>
            <param name="param1">First parameter for the <paramref name="text"/> delegate.</param>
            <param name="param2">Second parameter for the <paramref name="text"/> delegate.</param>
            <param name="param3">Third parameter for the <paramref name="text"/> delegate.</param>
        </member>
        <member name="M:CK.Core.ActivityMonitorSendExtension.Send(CK.Core.IActivityMonitorLineSender,System.String)">
            <summary>
            Sends a text.
            </summary>
            <param name="this">This <see cref="T:CK.Core.IActivityMonitorLineSender"/> object.</param>
            <param name="text">The text of the log.</param>
        </member>
        <member name="M:CK.Core.ActivityMonitorSendExtension.Send(CK.Core.IActivityMonitorLineSender,System.String,System.Object)">
            <summary>
            Sends a formatted text.
            </summary>
            <param name="this">This <see cref="T:CK.Core.IActivityMonitorLineSender"/> object.</param>
            <param name="format">The text format of the log with 1 placeholders.</param>
            <param name="arg0">Parameter to format (placeholder {0}).</param>
        </member>
        <member name="M:CK.Core.ActivityMonitorSendExtension.Send(CK.Core.IActivityMonitorLineSender,System.String,System.Object,System.Object)">
            <summary>
            Sends a formatted text.
            </summary>
            <param name="this">This <see cref="T:CK.Core.IActivityMonitorLineSender"/> object.</param>
            <param name="format">The text format of the log with 2 placeholders.</param>
            <param name="arg0">Parameter to format (placeholder {0}).</param>
            <param name="arg1">Parameter to format (placeholder {1}).</param>
        </member>
        <member name="M:CK.Core.ActivityMonitorSendExtension.Send(CK.Core.IActivityMonitorLineSender,System.String,System.Object,System.Object,System.Object)">
            <summary>
            Sends a formatted text.
            </summary>
            <param name="this">This <see cref="T:CK.Core.IActivityMonitorLineSender"/> object.</param>
            <param name="format">The text format of the log with 3 placeholders.</param>
            <param name="arg0">Parameter to format (placeholder {0}).</param>
            <param name="arg1">Parameter to format (placeholder {1}).</param>
            <param name="arg2">Parameter to format (placeholder {2}).</param>
        </member>
        <member name="M:CK.Core.ActivityMonitorSendExtension.Send(CK.Core.IActivityMonitorLineSender,System.String,System.Object[])">
            <summary>
            Sends a formatted text.
            </summary>
            <param name="this">This <see cref="T:CK.Core.IActivityMonitorLineSender"/> object.</param>
            <param name="format">The text format of the log with 4 placeholders.</param>
            <param name="arguments">Multiple parameters to format.</param>
        </member>
        <member name="M:CK.Core.ActivityMonitorSendExtension.Send(CK.Core.IActivityMonitorLineSender,System.Func{System.String})">
            <summary>
            Sends a text obtained through a delegate.
            The delegate will be called only if the log is not filtered.
            </summary>
            <param name="this">This <see cref="T:CK.Core.IActivityMonitorLineSender"/> object.</param> 
            <param name="text">Function that returns a string. Must not be null.</param>
        </member>
        <member name="M:CK.Core.ActivityMonitorSendExtension.Send``1(CK.Core.IActivityMonitorLineSender,System.Func{``0,System.String},``0)">
            <summary>
            Sends a text obtained through a parameterized delegate.
            The delegate will be called only if the log is not filtered.
            </summary>
            <typeparam name="T">Type of the parameter that <paramref name="text"/> accepts.</typeparam>
            <param name="this">This <see cref="T:CK.Core.IActivityMonitorLineSender"/> object.</param> 
            <param name="text">Function that returns a string. Must not be null.</param>
            <param name="param">Parameter of the <paramref name="text"/> delegate.</param>
        </member>
        <member name="M:CK.Core.ActivityMonitorSendExtension.Send``2(CK.Core.IActivityMonitorLineSender,System.Func{``0,``1,System.String},``0,``1)">
            <summary>
            Sends a text obtained through a parameterized delegate.
            The delegate will be called only if the log is not filtered.
            </summary>
            <typeparam name="T1">Type of the first parameter that <paramref name="text"/> accepts.</typeparam>
            <typeparam name="T2">Type of the second parameter that <paramref name="text"/> accepts.</typeparam>
            <param name="this">This <see cref="T:CK.Core.IActivityMonitorLineSender"/> object.</param> 
            <param name="text">Function that returns a string. Must not be null.</param>
            <param name="param1">First parameter for the <paramref name="text"/> delegate.</param>
            <param name="param2">Second parameter for the <paramref name="text"/> delegate.</param>
        </member>
        <member name="M:CK.Core.ActivityMonitorSendExtension.Send``3(CK.Core.IActivityMonitorLineSender,System.Func{``0,``1,``2,System.String},``0,``1,``2)">
            <summary>
            Sends a log with a text obtained through a parameterized delegate.
            The delegate will be called only if the log is not filtered.
            </summary>
            <typeparam name="T1">Type of the first parameter that <paramref name="text"/> accepts.</typeparam>
            <typeparam name="T2">Type of the second parameter that <paramref name="text"/> accepts.</typeparam>
            <typeparam name="T3">Type of the third parameter that <paramref name="text"/> accepts.</typeparam>
            <param name="this">This <see cref="T:CK.Core.IActivityMonitorLineSender"/> object.</param> 
            <param name="text">Function that returns a string. Must not be null.</param>
            <param name="param1">First parameter for the <paramref name="text"/> delegate.</param>
            <param name="param2">Second parameter for the <paramref name="text"/> delegate.</param>
            <param name="param3">Third parameter for the <paramref name="text"/> delegate.</param>
        </member>
        <member name="M:CK.Core.ActivityMonitorSendExtension.Send(CK.Core.IActivityMonitorLineSender,CK.Core.CKTrait,System.String)">
            <summary>
            Sends a text with associated tags.
            </summary>
            <param name="this">This <see cref="T:CK.Core.IActivityMonitorLineSender"/> object.</param>
            <param name="tags">Tags for the log.</param>
            <param name="text">The text of the log.</param>
        </member>
        <member name="M:CK.Core.ActivityMonitorSendExtension.Send(CK.Core.IActivityMonitorLineSender,CK.Core.CKTrait,System.String,System.Object)">
            <summary>
            Sends a formatted text with associated tags.
            </summary>
            <param name="this">This <see cref="T:CK.Core.IActivityMonitorLineSender"/> object.</param>
            <param name="tags">Tags for the log.</param>
            <param name="format">The text format of the log with 1 placeholders.</param>
            <param name="arg0">Parameter to format (placeholder {0}).</param>
        </member>
        <member name="M:CK.Core.ActivityMonitorSendExtension.Send(CK.Core.IActivityMonitorLineSender,CK.Core.CKTrait,System.String,System.Object,System.Object)">
            <summary>
            Sends a formatted text with associated tags.
            </summary>
            <param name="this">This <see cref="T:CK.Core.IActivityMonitorLineSender"/> object.</param>
            <param name="tags">Tags for the log.</param>
            <param name="format">The text format of the log with 2 placeholders.</param>
            <param name="arg0">Parameter to format (placeholder {0}).</param>
            <param name="arg1">Parameter to format (placeholder {1}).</param>
        </member>
        <member name="M:CK.Core.ActivityMonitorSendExtension.Send(CK.Core.IActivityMonitorLineSender,CK.Core.CKTrait,System.String,System.Object,System.Object,System.Object)">
            <summary>
            Sends a formatted text with associated tags.
            </summary>
            <param name="this">This <see cref="T:CK.Core.IActivityMonitorLineSender"/> object.</param>
            <param name="tags">Tags for the log.</param>
            <param name="format">The text format of the log with 3 placeholders.</param>
            <param name="arg0">Parameter to format (placeholder {0}).</param>
            <param name="arg1">Parameter to format (placeholder {1}).</param>
            <param name="arg2">Parameter to format (placeholder {2}).</param>
        </member>
        <member name="M:CK.Core.ActivityMonitorSendExtension.Send(CK.Core.IActivityMonitorLineSender,CK.Core.CKTrait,System.String,System.Object[])">
            <summary>
            Sends a formatted text with associated tags.
            </summary>
            <param name="this">This <see cref="T:CK.Core.IActivityMonitorLineSender"/> object.</param>
            <param name="tags">Tags for the log.</param>
            <param name="format">The text format of the log with 4 placeholders.</param>
            <param name="arguments">Multiple parameters to format.</param>
        </member>
        <member name="M:CK.Core.ActivityMonitorSendExtension.Send(CK.Core.IActivityMonitorLineSender,CK.Core.CKTrait,System.Func{System.String})">
            <summary>
            Sends a text obtained through a delegate with associated tags.
            The delegate will be called only if the log is not filtered.
            </summary>
            <param name="this">This <see cref="T:CK.Core.IActivityMonitorLineSender"/> object.</param>
            <param name="tags">Tags for the log.</param> 
            <param name="text">Function that returns a string. Must not be null.</param>
        </member>
        <member name="M:CK.Core.ActivityMonitorSendExtension.Send``1(CK.Core.IActivityMonitorLineSender,CK.Core.CKTrait,System.Func{``0,System.String},``0)">
            <summary>
            Sends a text obtained through a parameterized delegate with associated tags.
            The delegate will be called only if the log is not filtered.
            </summary>
            <typeparam name="T">Type of the parameter that <paramref name="text"/> accepts.</typeparam>
            <param name="this">This <see cref="T:CK.Core.IActivityMonitorLineSender"/> object.</param>
            <param name="tags">Tags for the log.</param> 
            <param name="text">Function that returns a string. Must not be null.</param>
            <param name="param">Parameter of the <paramref name="text"/> delegate.</param>
        </member>
        <member name="M:CK.Core.ActivityMonitorSendExtension.Send``2(CK.Core.IActivityMonitorLineSender,CK.Core.CKTrait,System.Func{``0,``1,System.String},``0,``1)">
            <summary>
            Sends a text obtained through a parameterized delegate with associated tags.
            The delegate will be called only if the log is not filtered.
            </summary>
            <typeparam name="T1">Type of the first parameter that <paramref name="text"/> accepts.</typeparam>
            <typeparam name="T2">Type of the second parameter that <paramref name="text"/> accepts.</typeparam>
            <param name="this">This <see cref="T:CK.Core.IActivityMonitorLineSender"/> object.</param>
            <param name="tags">Tags for the log.</param> 
            <param name="text">Function that returns a string. Must not be null.</param>
            <param name="param1">First parameter for the <paramref name="text"/> delegate.</param>
            <param name="param2">Second parameter for the <paramref name="text"/> delegate.</param>
        </member>
        <member name="M:CK.Core.ActivityMonitorSendExtension.Send``3(CK.Core.IActivityMonitorLineSender,CK.Core.CKTrait,System.Func{``0,``1,``2,System.String},``0,``1,``2)">
            <summary>
            Sends a log with a text obtained through a parameterized delegate with associated tags.
            The delegate will be called only if the log is not filtered.
            </summary>
            <typeparam name="T1">Type of the first parameter that <paramref name="text"/> accepts.</typeparam>
            <typeparam name="T2">Type of the second parameter that <paramref name="text"/> accepts.</typeparam>
            <typeparam name="T3">Type of the third parameter that <paramref name="text"/> accepts.</typeparam>
            <param name="this">This <see cref="T:CK.Core.IActivityMonitorLineSender"/> object.</param>
            <param name="tags">Tags for the log.</param> 
            <param name="text">Function that returns a string. Must not be null.</param>
            <param name="param1">First parameter for the <paramref name="text"/> delegate.</param>
            <param name="param2">Second parameter for the <paramref name="text"/> delegate.</param>
            <param name="param3">Third parameter for the <paramref name="text"/> delegate.</param>
        </member>
        <member name="M:CK.Core.ActivityMonitorSendExtension.Send(CK.Core.IActivityMonitorLineSender,System.Exception)">
            <summary>
            Sends a log with an exception.
            </summary>
            <param name="this">This <see cref="T:CK.Core.IActivityMonitorLineSender"/> object.</param>
            <param name="ex">The exception. Must not be null.</param>
        </member>
        <member name="M:CK.Core.ActivityMonitorSendExtension.Send(CK.Core.IActivityMonitorLineSender,System.Exception,System.String)">
            <summary>
            Sends a text with an exception.
            </summary>
            <param name="this">This <see cref="T:CK.Core.IActivityMonitorLineSender"/> object.</param>
            <param name="ex">The exception. Must not be null.</param>
            <param name="text">The text of the log.</param>
        </member>
        <member name="M:CK.Core.ActivityMonitorSendExtension.Send(CK.Core.IActivityMonitorLineSender,System.Exception,System.String,System.Object)">
            <summary>
            Sends a formatted text with an exception.
            </summary>
            <param name="this">This <see cref="T:CK.Core.IActivityMonitorLineSender"/> object.</param>
            <param name="ex">The exception. Must not be null.</param>
            <param name="format">The text format of the log with 1 placeholders.</param>
            <param name="arg0">Parameter to format (placeholder {0}).</param>
        </member>
        <member name="M:CK.Core.ActivityMonitorSendExtension.Send(CK.Core.IActivityMonitorLineSender,System.Exception,System.String,System.Object,System.Object)">
            <summary>
            Sends a formatted text with an exception.
            </summary>
            <param name="this">This <see cref="T:CK.Core.IActivityMonitorLineSender"/> object.</param>
            <param name="ex">The exception. Must not be null.</param>
            <param name="format">The text format of the log with 2 placeholders.</param>
            <param name="arg0">Parameter to format (placeholder {0}).</param>
            <param name="arg1">Parameter to format (placeholder {1}).</param>
        </member>
        <member name="M:CK.Core.ActivityMonitorSendExtension.Send(CK.Core.IActivityMonitorLineSender,System.Exception,System.String,System.Object,System.Object,System.Object)">
            <summary>
            Sends a formatted text with an exception.
            </summary>
            <param name="this">This <see cref="T:CK.Core.IActivityMonitorLineSender"/> object.</param>
            <param name="ex">The exception. Must not be null.</param>
            <param name="format">The text format of the log with 3 placeholders.</param>
            <param name="arg0">Parameter to format (placeholder {0}).</param>
            <param name="arg1">Parameter to format (placeholder {1}).</param>
            <param name="arg2">Parameter to format (placeholder {2}).</param>
        </member>
        <member name="M:CK.Core.ActivityMonitorSendExtension.Send(CK.Core.IActivityMonitorLineSender,System.Exception,System.String,System.Object[])">
            <summary>
            Sends a formatted text with an exception.
            </summary>
            <param name="this">This <see cref="T:CK.Core.IActivityMonitorLineSender"/> object.</param>
            <param name="ex">The exception. Must not be null.</param>
            <param name="format">The text format of the log with 4 placeholders.</param>
            <param name="arguments">Multiple parameters to format.</param>
        </member>
        <member name="M:CK.Core.ActivityMonitorSendExtension.Send(CK.Core.IActivityMonitorLineSender,System.Exception,System.Func{System.String})">
            <summary>
            Sends a text obtained through a delegate with an exception.
            The delegate will be called only if the log is not filtered.
            </summary>
            <param name="this">This <see cref="T:CK.Core.IActivityMonitorLineSender"/> object.</param>
            <param name="ex">The exception. Must not be null.</param> 
            <param name="text">Function that returns a string. Must not be null.</param>
        </member>
        <member name="M:CK.Core.ActivityMonitorSendExtension.Send``1(CK.Core.IActivityMonitorLineSender,System.Exception,System.Func{``0,System.String},``0)">
            <summary>
            Sends a text obtained through a parameterized delegate with an exception.
            The delegate will be called only if the log is not filtered.
            </summary>
            <typeparam name="T">Type of the parameter that <paramref name="text"/> accepts.</typeparam>
            <param name="this">This <see cref="T:CK.Core.IActivityMonitorLineSender"/> object.</param>
            <param name="ex">The exception. Must not be null.</param> 
            <param name="text">Function that returns a string. Must not be null.</param>
            <param name="param">Parameter of the <paramref name="text"/> delegate.</param>
        </member>
        <member name="M:CK.Core.ActivityMonitorSendExtension.Send``2(CK.Core.IActivityMonitorLineSender,System.Exception,System.Func{``0,``1,System.String},``0,``1)">
            <summary>
            Sends a text obtained through a parameterized delegate with an exception.
            The delegate will be called only if the log is not filtered.
            </summary>
            <typeparam name="T1">Type of the first parameter that <paramref name="text"/> accepts.</typeparam>
            <typeparam name="T2">Type of the second parameter that <paramref name="text"/> accepts.</typeparam>
            <param name="this">This <see cref="T:CK.Core.IActivityMonitorLineSender"/> object.</param>
            <param name="ex">The exception. Must not be null.</param> 
            <param name="text">Function that returns a string. Must not be null.</param>
            <param name="param1">First parameter for the <paramref name="text"/> delegate.</param>
            <param name="param2">Second parameter for the <paramref name="text"/> delegate.</param>
        </member>
        <member name="M:CK.Core.ActivityMonitorSendExtension.Send``3(CK.Core.IActivityMonitorLineSender,System.Exception,System.Func{``0,``1,``2,System.String},``0,``1,``2)">
            <summary>
            Sends a log with a text obtained through a parameterized delegate with an exception.
            The delegate will be called only if the log is not filtered.
            </summary>
            <typeparam name="T1">Type of the first parameter that <paramref name="text"/> accepts.</typeparam>
            <typeparam name="T2">Type of the second parameter that <paramref name="text"/> accepts.</typeparam>
            <typeparam name="T3">Type of the third parameter that <paramref name="text"/> accepts.</typeparam>
            <param name="this">This <see cref="T:CK.Core.IActivityMonitorLineSender"/> object.</param>
            <param name="ex">The exception. Must not be null.</param> 
            <param name="text">Function that returns a string. Must not be null.</param>
            <param name="param1">First parameter for the <paramref name="text"/> delegate.</param>
            <param name="param2">Second parameter for the <paramref name="text"/> delegate.</param>
            <param name="param3">Third parameter for the <paramref name="text"/> delegate.</param>
        </member>
        <member name="M:CK.Core.ActivityMonitorSendExtension.Send(CK.Core.IActivityMonitorLineSender,System.Exception,CK.Core.CKTrait)">
            <summary>
            Sends a log with an exception and associated tags.
            </summary>
            <param name="this">This <see cref="T:CK.Core.IActivityMonitorLineSender"/> object.</param>
            <param name="ex">The exception. Must not be null.</param>
            <param name="tags">Tags for the log.</param>
        </member>
        <member name="M:CK.Core.ActivityMonitorSendExtension.Send(CK.Core.IActivityMonitorLineSender,System.Exception,CK.Core.CKTrait,System.String)">
            <summary>
            Sends a text with an exception and associated tags.
            </summary>
            <param name="this">This <see cref="T:CK.Core.IActivityMonitorLineSender"/> object.</param>
            <param name="ex">The exception. Must not be null.</param>
            <param name="tags">Tags for the log.</param>
            <param name="text">The text of the log.</param>
        </member>
        <member name="M:CK.Core.ActivityMonitorSendExtension.Send(CK.Core.IActivityMonitorLineSender,System.Exception,CK.Core.CKTrait,System.String,System.Object)">
            <summary>
            Sends a formatted text with an exception and associated tags.
            </summary>
            <param name="this">This <see cref="T:CK.Core.IActivityMonitorLineSender"/> object.</param>
            <param name="ex">The exception. Must not be null.</param>
            <param name="tags">Tags for the log.</param>
            <param name="format">The text format of the log with 1 placeholders.</param>
            <param name="arg0">Parameter to format (placeholder {0}).</param>
        </member>
        <member name="M:CK.Core.ActivityMonitorSendExtension.Send(CK.Core.IActivityMonitorLineSender,System.Exception,CK.Core.CKTrait,System.String,System.Object,System.Object)">
            <summary>
            Sends a formatted text with an exception and associated tags.
            </summary>
            <param name="this">This <see cref="T:CK.Core.IActivityMonitorLineSender"/> object.</param>
            <param name="ex">The exception. Must not be null.</param>
            <param name="tags">Tags for the log.</param>
            <param name="format">The text format of the log with 2 placeholders.</param>
            <param name="arg0">Parameter to format (placeholder {0}).</param>
            <param name="arg1">Parameter to format (placeholder {1}).</param>
        </member>
        <member name="M:CK.Core.ActivityMonitorSendExtension.Send(CK.Core.IActivityMonitorLineSender,System.Exception,CK.Core.CKTrait,System.String,System.Object,System.Object,System.Object)">
            <summary>
            Sends a formatted text with an exception and associated tags.
            </summary>
            <param name="this">This <see cref="T:CK.Core.IActivityMonitorLineSender"/> object.</param>
            <param name="ex">The exception. Must not be null.</param>
            <param name="tags">Tags for the log.</param>
            <param name="format">The text format of the log with 3 placeholders.</param>
            <param name="arg0">Parameter to format (placeholder {0}).</param>
            <param name="arg1">Parameter to format (placeholder {1}).</param>
            <param name="arg2">Parameter to format (placeholder {2}).</param>
        </member>
        <member name="M:CK.Core.ActivityMonitorSendExtension.Send(CK.Core.IActivityMonitorLineSender,System.Exception,CK.Core.CKTrait,System.String,System.Object[])">
            <summary>
            Sends a formatted text with an exception and associated tags.
            </summary>
            <param name="this">This <see cref="T:CK.Core.IActivityMonitorLineSender"/> object.</param>
            <param name="ex">The exception. Must not be null.</param>
            <param name="tags">Tags for the log.</param>
            <param name="format">The text format of the log with 4 placeholders.</param>
            <param name="arguments">Multiple parameters to format.</param>
        </member>
        <member name="M:CK.Core.ActivityMonitorSendExtension.Send(CK.Core.IActivityMonitorLineSender,System.Exception,CK.Core.CKTrait,System.Func{System.String})">
            <summary>
            Sends a text obtained through a delegate with an exception and associated tags.
            The delegate will be called only if the log is not filtered.
            </summary>
            <param name="this">This <see cref="T:CK.Core.IActivityMonitorLineSender"/> object.</param>
            <param name="ex">The exception. Must not be null.</param>
            <param name="tags">Tags for the log.</param> 
            <param name="text">Function that returns a string. Must not be null.</param>
        </member>
        <member name="M:CK.Core.ActivityMonitorSendExtension.Send``1(CK.Core.IActivityMonitorLineSender,System.Exception,CK.Core.CKTrait,System.Func{``0,System.String},``0)">
            <summary>
            Sends a text obtained through a parameterized delegate with an exception and associated tags.
            The delegate will be called only if the log is not filtered.
            </summary>
            <typeparam name="T">Type of the parameter that <paramref name="text"/> accepts.</typeparam>
            <param name="this">This <see cref="T:CK.Core.IActivityMonitorLineSender"/> object.</param>
            <param name="ex">The exception. Must not be null.</param>
            <param name="tags">Tags for the log.</param> 
            <param name="text">Function that returns a string. Must not be null.</param>
            <param name="param">Parameter of the <paramref name="text"/> delegate.</param>
        </member>
        <member name="M:CK.Core.ActivityMonitorSendExtension.Send``2(CK.Core.IActivityMonitorLineSender,System.Exception,CK.Core.CKTrait,System.Func{``0,``1,System.String},``0,``1)">
            <summary>
            Sends a text obtained through a parameterized delegate with an exception and associated tags.
            The delegate will be called only if the log is not filtered.
            </summary>
            <typeparam name="T1">Type of the first parameter that <paramref name="text"/> accepts.</typeparam>
            <typeparam name="T2">Type of the second parameter that <paramref name="text"/> accepts.</typeparam>
            <param name="this">This <see cref="T:CK.Core.IActivityMonitorLineSender"/> object.</param>
            <param name="ex">The exception. Must not be null.</param>
            <param name="tags">Tags for the log.</param> 
            <param name="text">Function that returns a string. Must not be null.</param>
            <param name="param1">First parameter for the <paramref name="text"/> delegate.</param>
            <param name="param2">Second parameter for the <paramref name="text"/> delegate.</param>
        </member>
        <member name="M:CK.Core.ActivityMonitorSendExtension.Send``3(CK.Core.IActivityMonitorLineSender,System.Exception,CK.Core.CKTrait,System.Func{``0,``1,``2,System.String},``0,``1,``2)">
            <summary>
            Sends a log with a text obtained through a parameterized delegate with an exception and associated tags.
            The delegate will be called only if the log is not filtered.
            </summary>
            <typeparam name="T1">Type of the first parameter that <paramref name="text"/> accepts.</typeparam>
            <typeparam name="T2">Type of the second parameter that <paramref name="text"/> accepts.</typeparam>
            <typeparam name="T3">Type of the third parameter that <paramref name="text"/> accepts.</typeparam>
            <param name="this">This <see cref="T:CK.Core.IActivityMonitorLineSender"/> object.</param>
            <param name="ex">The exception. Must not be null.</param>
            <param name="tags">Tags for the log.</param> 
            <param name="text">Function that returns a string. Must not be null.</param>
            <param name="param1">First parameter for the <paramref name="text"/> delegate.</param>
            <param name="param2">Second parameter for the <paramref name="text"/> delegate.</param>
            <param name="param3">Third parameter for the <paramref name="text"/> delegate.</param>
        </member>
        <member name="P:CK.Core.ActivityMonitorGroupSender.IsRejected">
            <summary>
            Gets whether the log has been rejected.
            </summary>
        </member>
        <member name="M:CK.Core.ActivityMonitorGroupSender.#ctor(CK.Core.IActivityMonitor,CK.Core.LogLevel,System.String,System.Int32)">
            <summary>
            Used only by filtering extension methods (level is always filtered).
            </summary>
        </member>
        <member name="M:CK.Core.ActivityMonitorGroupSender.#ctor(CK.Core.IActivityMonitor)">
            <summary>
            Used only to initialize a ActivityMonitorGroupSender for rejected opened group.
            </summary>
        </member>
        <member name="F:CK.Core.ActivityMonitorLineSender.FakeLineSender">
            <summary>
            We can use a singleton with a null monitor since to NOT send a line, we do not need the monitor.
            This is not the same for groups: to reject a group opening we need to open a "rejected group" in order to track
            closing, hence we do need to have a monitor: for groups, we must build a GroupSender that references it.
            </summary>
        </member>
        <member name="M:CK.Core.ActivityMonitorLineSender.#ctor(CK.Core.IActivityMonitor,CK.Core.LogLevel,System.String,System.Int32)">
            <summary>
            Used only by filtering extension methods (level is filtered and not None) or by static FakeLineSender (level is None).
            </summary>
        </member>
        <member name="T:CK.Core.IActivityMonitorGroupSender">
            <summary>
            The interface that carries Send extension methods for groups.
            </summary>
        </member>
        <member name="P:CK.Core.IActivityMonitorGroupSender.IsRejected">
            <summary>
            Gets whether the log has been rejected.
            </summary>
        </member>
        <member name="T:CK.Core.IActivityMonitorLineSender">
            <summary>
            The interface that carries Send extension methods.
            </summary>
        </member>
        <member name="P:CK.Core.IActivityMonitorLineSender.IsRejected">
            <summary>
            Gets whether the log has been rejected.
            </summary>
        </member>
    </members>
</doc>
