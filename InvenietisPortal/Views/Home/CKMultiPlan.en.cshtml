@model InvPortal.Models.SupportEmailViewModel
@{
    Layout = "~/Views/Shared/_Layout.en.cshtml";
    ViewBag.Title = "Invenietis - CK-MultiPlan - End-user controlled template engine";
    ViewBag.Keywords = "CK-MultiPlan controlled template engine reports Office";
    ViewBag.Description = "CK-MultiPlan is an innovative way to produce Office reports that is both simple for the user and painless for the developer.";
}

@section header
{
    <style type="text/css">
        section.container h2 {
            text-align: left;
        }
    </style>
}

<div class="row-fluid ">
    <div class="span12 top-bx">
        <section class="container">
            <div class="row-fluid">
                <div class="span4 hidden-phone" style="text-align:center">
                    <img src="~/content/images/ck-multiplan/logo_multiplan.png" alt="control">
                </div>
                <div class="span8">
                    <h1>CK-MultiPlan</h1>
                    <h3>End-user controlled template engine</h3>

                    <p>CK-MultiPlan is an innovative way to produce Office reports that is both simple for the user and painless for the developer.</p>

                    <p>A software component that each and every architect or decision maker should be aware of!</p>

                </div>
            </div>
        </section>
    </div>
</div>
<div class="row-fluid">
    <div class="span12 top-bx approche">
        <section class="container">
            <div class="row-fluid">
                <div class="span8">
                    <h2>Gives control to your users</h2>

                    <p>Editing a template is done directly in the document editor (Microsoft Word, Excel, etc.) without any third party tools: a template is a normal document that contains sample data and tags that describe what and where data should be included.</p>
                    <p>Anyone who knows how to edit a document can turn it into a template in a few minutes!</p>

                </div>
                <div class="span4 hidden-phone" style="text-align:center">
                    <img src="~/content/images/ck-multiplan/Remote-Control.png" alt="control">
                </div>
            </div>
        </section>
    </div>
</div>
<div class="row-fluid">
    <div class="span12 top-bx ">
        <section class="container">
            <div class="row-fluid">
                <div class="span4 hidden-phone" style="text-align:center">
                    <img src="~/content/images/ck-multiplan/Document-Check.png" alt="control">
                </div>
                <div class="span8">

                    <h2>Your existing documents aren't lost</h2>

                    <p>Did you and your customers already write report documents (using Word, Excel, etc.)? That investment won't be lost: you only need to turn them into CK-MultiPlan templates, then you'll be able to use them directly in your report generation operations.</p>
                    <p>Most of the available solutions require you to either rewrite your templates from scratch, or to order customized development, so that your reports can be generated -- sometimes both. CK-MultiPlan allows you not to have any customized development for every template: integration development will be, in most cases, done once and for all.</p>

                </div>
            </div>
        </section>
    </div>
</div>
<div class="row-fluid">
    <div class="span12 top-bx approche">
        <section class="container">
            <div class="row-fluid">
                <div class="span12">
                    <h2>Ease the work of your developers </h2>
                    <p>Add the CK.MultiPlan NuGet package to your existing .NET solutions, and create your documents in minutes thanks to already existing feeder objects that know how to read data.</p>

                    <pre>
        // Load the template, feed it with data and save.
        using( var template = MultiPlan.LoadTemplate( "Template.docx", LogFilter.Debug ) )
        {
            var feeder = new XmlDataFeeder();
            feeder.Feed( "Data.xml", template );
            template.Save( "GeneratedDocument.docx", ExportType.Docx );
        }</pre>

                    <p>This is a very simple piece of code but it actually covers 90% of our needs. Of course, more complex things can be done such as discovering what the template expects (it can be as simple as the name of a “DataSource”) and then choose or build a data to satisfy it… and, once done, this will happily run against any kind of templates (Excel, Word, etc.). </p>

                </div>
            </div>
        </section>
    </div>
</div>
<div class="row-fluid">
    <div class="span12 top-bx ">
        <section class="container">
            <div class="row-fluid">
                <div class="span8">
                    <h2>Be the problem solver that everybody is waiting for</h2>
                    <p>You know that reporting solutions are often a mess. CK-MultiPlan not only eases integration but also maximizes the reuse of existing data (existing object models, XML data sources, Web Services) against different presentation technologies and templates (possibly edited by the end-user).</p>

                    <p>
                        As a developer, focus on the Data you need or want to expose.<br />
                        As a user, focus on how you want it displayed.<br />
                        As an architect, focus on how your users will manage their templates and how your developer will produce the Data.<br />
                        And relax.<br />
                    </p>

                </div>
                <div class="span4 hidden-phone" style="text-align:center">
                    <img src="~/content/images/ck-multiplan/Doctor.png" alt="control">
                </div>
            </div>
        </section>
    </div>
</div>

<div class="row-fluid">
    <div class="span12 top-bx approche">
        <section class="container">
            <div class="row-fluid">

                <div class="span4 hidden-phone" style="text-align:center">
                    <img src="~/content/images/ck-multiplan/Gear.png" alt="control">
                </div>
                <div class="span8">
                    <h2>How it works</h2>
                    <p>The design of CK-MultiPlan relies on the well-known principle of separating the Data from the View: the templates (the View) contains Tags that identify “pieces of Data” as simple dotted names (like in “Customer.Person.FullName”).</p>

                    <p>Actual Tags definition depends on the underlying technology: we choose the best, easiest, and most powerful ways to define them for each presentation technology. For instance, in Word we rely on the Word feature called Structured Document Tags (SDTs), whereas in Excel (which does not feature SDTs), Tags are depicted as text tags, which can be set at multiple places in the document (even cell comments can contain Tags).</p>

                    <p>The dotted names describe the data expected by the template. This is independent of the data that will actually be fed to produce the final document: the exact same Data (coming from a database for instance) can be used to feed an Excel document and a Word document. </p>

                </div>
            </div>
        </section>
    </div>
</div>

<div class="row-fluid">
    <div class="span12 top-bx ">
        <section class="container">
            <div class="row-fluid">
                <div class="span6">
                    <h2>Facts</h2>

                    <p>
                        Fully managed .NET 4.5 codebase.<br />
                        Usage and generation do not depend on any Office installation<br />
                        Currently implemented template engines:<br />
                        <ul>
                            <li>Excel files (2010, 2013) output to Excel or PDF</li>
                            <li>Word files (2010, 2013) output to Word or PDF</li>
                            <li>XML files output to XML</li>
                        </ul>
                    </p>

                </div>
                <div class="span6 hidden-phone" style="text-align:center">
                    <img src="~/content/images/ck-multiplan/Microsoft-Word-01.png" alt="control">
                    <img src="~/content/images/ck-multiplan/Microsoft-Excel-2013-02.png" alt="control">
                    <img src="~/content/images/ck-multiplan/Adobe-Acrobat.png" alt="control">
                </div>
            </div>
        </section>
    </div>
</div>

<div class="row-fluid">
    <div class="span12 top-bx approche">
        <section class="container">

            <div class="row-fluid">
                <div class="span4 hidden-phone" style="text-align:center">
                    <img src="~/content/images/ck-multiplan/Headphone-Mike.png" alt="control">
                </div>
                <div class="span8">

                    <h2>Questions ?</h2>
                    <h3 style="margin-bottom: 0;">Want to know more?</h3>
                    <h3>Use the form below to contact us.</h3>

                    <hr />

                    @using (Ajax.BeginForm( "Support", "Home", new { }, new AjaxOptions() { HttpMethod = "POST", UpdateTargetId = "form", InsertionMode = InsertionMode.Replace }, new { @class = "form-horizontal" } ))
                    {
                        <div id="form">
                            @Html.Partial( "_Form.en", Model )
                        </div>
                    }
                </div>
            </div>

            <div class="row-fluid" style="margin-top: 30px">
                <div class="span8 offset2">
                </div>
            </div>
        </section>
    </div>
</div>
